// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
    id    String @id @default(cuid())
    name  String
    email String @unique

    image          String?
    password       String
    role           String
    phone_number   String
    coach_table    Client?
    client_table   Coach?
    isPaidCustomer Boolean @default(false)
}

model Coach {
    id              Int      @id @default(dbgenerated("1"))
    numero_siren    String
    licence_sportif Bytes?
    coach_id        String   @unique
    created_at      DateTime @default(now())
    UserIdCoach     User     @relation(fields: [coach_id], references: [id])
    client          Client[]
    Events          Events[]
}

model Client {
    id           Int           @id @default(autoincrement())
    coach_Id     String?
    user_Id      String        @unique
    created_at   DateTime      @default(now())
    coachId      Coach?        @relation(fields: [coach_Id], references: [coach_id])
    UserIdPrisma User          @relation(fields: [user_Id], references: [id])
    Profil       ClientProfil?
    event        Events[]
}

model ClientProfil {
    id           Int    @id @default(autoincrement())
    age          Int
    weight       Int
    client_id    Int    @unique
    useridprisma Client @relation(fields: [client_id], references: [id])
}

model Events {
    id                 Int      @id @default(autoincrement())
    start              DateTime
    end                DateTime
    coach_id           Int      @unique
    client_id          Int      @unique
    salle              String
    hours              BigInt
    isPaid             Boolean  @default(false)
    type_offer         BigInt   @unique
    typeofferprisma    Product? @relation(fields: [type_offer], references: [id])
    useridprismaClient Client   @relation(fields: [client_id], references: [id])
    UserIdCoach        Coach    @relation(fields: [coach_id], references: [id])
}

model Product {
    id            BigInt   @id @default(autoincrement())
    name          String
    adress        String?
    phoneNumber   String?
    offers        Offer[]
    eventsRelated Events[]
}

model StripePricing {
    id           Int            @id @default(autoincrement())
    price_coach  Int
    price_client Int
    product_id   String
    room_id      Int?
    roomIdPrisma AvailableRoom? @relation(fields: [room_id], references: [id])
}

model AvailableRoom {
    id              Int             @id @default(autoincrement())
    room_name       String
    related_price   Int
    prisma_price_id StripePricing[]
}

model Offer {
    id          Int     @id @default(autoincrement())
    productId   BigInt
    product     Product @relation(fields: [productId], references: [id])
    weekNumber  Int
    coachPrice  Int
    clientPrice Int
}
