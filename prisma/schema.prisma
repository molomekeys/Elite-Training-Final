// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider     = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id    String @id @default(cuid())
    name  String
    email String @unique

    image          String?
    password       String
    role           String
    phone_number   String
    coach_table    Coach?
    client_table   Client?
    password_reset String? @default("null")
    isPaidCustomer Boolean @default(false)
}

model Billing {
    id Int @id @default(autoincrement())

    bill_invoice_pdf     String
    coach_id             Int
    client_id            Int
    price                Int
    createdAt            DateTime          @default(now())
    hours                Int
    isPaid               Boolean           @default(false)
    offer_id             Int?
    salle_id             Int
    programme_id         Int?              @unique
    type_offer           String
    offer_prisma_id      PriceTable?       @relation(fields: [offer_id], references: [id])
    related_events       Events[]
    prisma_place_id      AvailablePlace    @relation(fields: [salle_id], references: [id])
    prisma_client_id     Client            @relation(fields: [client_id], references: [id])
    prisma_coach_id      Coach             @relation(fields: [coach_id], references: [id])
    programme_selling_id ProgrammePricing? @relation(fields: [programme_id], references: [id])

    @@index(offer_id)
    @@index(coach_id)
    @@index(client_id)
    @@index(salle_id)
    @@index(programme_id)
}

model Coach {
    id              Int       @id @default(autoincrement())
    numero_siren    String
    licence_sportif String?
    isValid         Boolean   @default(false)
    user_id         String    @unique
    created_at      DateTime  @default(now())
    UserIdCoach     User      @relation(fields: [user_id], references: [id])
    client          Client[]
    Events          Events[]
    alllBilling     Billing[]

    @@index(user_id)
}

model Client {
    id           Int           @id @default(autoincrement())
    coach_id     Int?
    user_id      String        @unique
    created_at   DateTime      @default(now())
    coachId      Coach?        @relation(fields: [coach_id], references: [id])
    UserIdPrisma User          @relation(fields: [user_id], references: [id])
    profil       ClientProfil?
    event        Events[]
    alllBilling  Billing[]

    @@index(user_id)
    @@index(coach_id)
}

model ClientProfil {
    id           Int    @id @default(autoincrement())
    age          Int
    weight       Int
    client_id    Int    @unique
    useridprisma Client @relation(fields: [client_id], references: [id])

    @@index(client_id)
}

model Events {
    id                 Int             @id @default(autoincrement())
    start              DateTime
    end                DateTime
    title              String
    coach_id           Int
    client_id          Int
    salle_id           Int
    hours              Float
    isPaid             Boolean         @default(false)
    billing_id         Int?
    custom_message     String?
    billingPrisma      Billing?        @relation(fields: [billing_id], references: [id])
    salleIdPrisma      AvailablePlace? @relation(fields: [salle_id], references: [id])
    useridprismaClient Client?         @relation(fields: [client_id], references: [id])
    UserIdCoach        Coach?          @relation(fields: [coach_id], references: [id])

    @@index(coach_id)
    @@index(client_id)
    @@index(salle_id)
    @@index(billing_id)
}

model AvailablePlace {
    id                  Int               @id @default(autoincrement())
    room_name           String
    adresse             String?
    phone_Number        String?
    email               String?
    related_offer       Int
    related_events      Events[]
    all_related_billing Billing[]
    related_offerPrisma OfferTable        @relation(fields: [related_offer], references: [id])
    programme_id        Int?
    programme_price     ProgrammePricing? @relation(fields: [programme_id], references: [id])

    @@index(related_offer)
    @@index(programme_id)
}

model ProgrammePricing {
    id              Int              @id @default(autoincrement())
    stripe_id       String
    coach_price     Float
    client_price    Float
    type_offert     String
    place_available AvailablePlace[]
    billing_table   Billing[]
}

model OfferTable {
    id              Int              @id @default(autoincrement())
    name            String
    available_place AvailablePlace[]
    pricing_offer   PriceTable[]
}

model PriceTable {
    id            Int         @id @default(autoincrement())
    stripe_id     String
    seance_week   String
    coach_price   Float
    client_price  Float
    type_offert   String
    offer_id      Int?
    prismaOfferId OfferTable? @relation(fields: [offer_id], references: [id])
    billing_id    Billing[]

    @@index(offer_id)
}
